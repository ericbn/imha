name: Install Python virtualenv

inputs:
  cache-dependency-path:
    default: 'uv.lock'
  run:
    default: 'uv sync'
  python-version:
    required: true

runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: '0.8.22'
        python-version: ${{ inputs.python-version }}
    - uses: actions/setup-python@v5
      id: setup-python
      with:
        python-version: ${{ inputs.python-version }}
    - uses: actions/cache/restore@v4
      id: cache-venv-restore
      with:
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles(inputs.cache-dependency-path) }}
        path: .venv
    - name: Set up virtualenv
      shell: bash
      run: |
        [[ ! -d .venv ]] && uv venv --seed
        echo "VIRTUAL_ENV=${PWD}/.venv" >> ${GITHUB_ENV} && \
        echo "${PWD}/.venv/bin" >> ${GITHUB_PATH}
    - name: Install dependencies
      if: steps.cache-venv-restore.outputs.cache-hit != 'true'
      shell: bash
      run: ${{ inputs.run }}
    - uses: actions/cache/save@v4
      if: steps.cache-venv-restore.outputs.cache-hit != 'true'
      with:
        key: ${{ steps.cache-venv-restore.outputs.cache-primary-key }}
        path: .venv
